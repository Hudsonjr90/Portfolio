.chartContainer {
  position: relative;
  border-radius: 20px;
  padding: 1.5rem;
  margin: 1rem 0;
  transition: all 0.4s ease;
  overflow: hidden;
  background: var(--bg_color);
  box-shadow: var(--main_color) 0 0 1rem;
}

.chartToggle {
  position: absolute;
  top: 2rem;
  right: 5rem;
  display: flex;
  gap: 1.5rem;
  z-index: 20;
}

.toggleButton {
  background: var(--bg_color);
  color: var(--main_color);
  border: 2px solid var(--main_color);
  border-radius: 8px;
  padding: 0.8rem;
  font-size: 1.4rem;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 44px;
  height: 44px;
  position: relative;
  overflow: hidden;
}

.toggleButton:hover {
  background: var(--main_color);
  color: var(--bg_color);
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(var(--main_color_rgb), 0.3);
}

.toggleButton.active {
  background: var(--main_color);
  color: var(--bg_color);
  box-shadow: 0 4px 15px rgba(var(--main_color_rgb), 0.4);
  transform: scale(1.05);
}

.toggleButton.active::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg, transparent, rgba(255,255,255,0.2), transparent);
  animation: shimmer 2s infinite;
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

.backButton {
  position: absolute;
  top: 1rem;
  left: 1rem;
  background: var(--bg_color);
  color: var(--main_color);
  padding: 0.8rem 1.2rem;
  font-size: 3.5rem;
  font-weight: 600;
  cursor: pointer;
  z-index: 20;
  transition: all 0.3s ease;
}

.backButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(var(--main_color), 0.4);
  background: linear-gradient(135deg, var(--main_color)E6, var(--main_color));
}

.chartContainer::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: 20px;
  padding: 2px;
  background: linear-gradient(45deg, var(--main_color), transparent, var(--main_color));
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: exclude;
  -webkit-mask-composite: xor;
  z-index: -1;
  opacity: 0.3;
}

/* Animação de entrada */
.chartContainer {
  animation: slideInUp 0.8s ease-out;
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(30px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* Efeitos especiais para gráficos neon */
.dark .chartContainer {
  position: relative;
}

.dark .chartContainer::after {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: linear-gradient(45deg, 
    var(--main_color), 
    transparent, 
    var(--main_color), 
    transparent, 
    var(--main_color)
  );
  border-radius: 22px;
  z-index: -2;
  opacity: 0.5;
  filter: blur(6px);
  animation: neonPulse 3s ease-in-out infinite;
}

@keyframes neonPulse {
  0%, 100% {
    opacity: 0.3;
    filter: blur(6px);
  }
  50% {
    opacity: 0.6;
    filter: blur(8px);
  }
}

.searchContainer {
  position: absolute;
  top: 2rem;
  left: 5rem;
  max-width: 250px;
  width: 100%;
}

.searchWrapper {
  position: relative;
  display: flex;
  align-items: center;
  background: var(--bg_color);
  border: 2px solid var(--main_color);
  border-radius: 25px;
  padding: 0.5rem 2rem 0.5rem 4rem;
  transition: all 0.3s ease;
  box-shadow: 0 0 10px rgba(var(--main_color_rgb), 0.2);
  cursor: text;
}

.searchWrapper:focus-within {
  border-color: var(--main_color);
  box-shadow: 0 0 20px rgba(var(--main_color_rgb), 0.4);
  transform: translateY(-2px);
}

.searchIcon {
  position: absolute;
  left: 1.5rem;
  top: 50%;
  transform: translateY(-50%);
  color: var(--main_color);
  font-size: 1.8rem;
  z-index: 2;
  opacity: 0.7;
  transition: all 0.3s ease;
}

.searchWrapper:focus-within .searchIcon {
  opacity: 1;
  transform: translateY(-50%) scale(1.1);
}

.searchInput {
  width: 100%;
  background: transparent;
  border: none;
  outline: none;
  color: var(--main_color);
  font-size: 1.6rem;
  font-weight: 500;
  padding: 0.8rem 0;
  font-family: inherit;
  cursor: text;
  position: relative;
  z-index: 1;
}

.searchInput::placeholder {
  color: rgba(var(--main_color_rgb), 0.6);
  font-weight: 400;
}

/* Efeito neon para o campo de busca */
.dark .searchWrapper {
  box-shadow: 
    0 0 10px rgba(var(--main_color_rgb), 0.3),
    inset 0 0 10px rgba(var(--main_color_rgb), 0.1);
}

.dark .searchWrapper:focus-within {
  box-shadow: 
    0 0 25px rgba(var(--main_color_rgb), 0.5),
    inset 0 0 15px rgba(var(--main_color_rgb), 0.2);
}

@media (max-width: 768px) {
  .searchContainer {
    max-width: 350px;
    margin-bottom: 1.5rem;
  }
  
  .searchWrapper {
    padding: 0.4rem 1.5rem 0.4rem 3.5rem;
  }
  
  .searchIcon {
    left: 1.2rem;
    font-size: 1.6rem;
  }
  
  .searchInput {
    font-size: 1.4rem;
    padding: 0.6rem 0;
  }

  .chartContainer {
    padding: 1rem;
    margin: 3rem 0;
    border-radius: 15px;
  }
  
  .chartContainer::before {
    border-radius: 15px;
  }

  .chartToggle {
    top: 0.5rem;
    right: 0.5rem;
    gap: 0.3rem;
  }

  .toggleButton {
    padding: 0.6rem;
    font-size: 1.2rem;
    width: 38px;
    height: 38px;
  }

  .backButton {
    top: 0.5rem;
    left: 0.5rem;
    padding: 0.6rem 1rem;
    font-size: 2.8rem;
  }
}

@media (max-width: 480px) {
  .searchContainer {
    max-width: 100%;
    margin-bottom: 3rem;
    position: relative;
  }
  
  .searchWrapper {
    padding: 0.3rem 1rem 0.3rem 3rem;
    border-radius: 20px;
  }
  
  .searchIcon {
    left: 1rem;
    font-size: 1.4rem;
  }
  
  .searchInput {
    font-size: 1.3rem;
    padding: 0.5rem 0;
  }

   .chartContainer {
    padding: 1rem;
    border-radius: 12px;
  }
  
  .chartContainer::before {
    border-radius: 12px;
  }

  .chartToggle {
    flex-direction: column;
    gap: 1.2rem;
  }

  .toggleButton {
    padding: 0.5rem;
    font-size: 1rem;
    width: 32px;
    height: 32px;
  }

  .backButton {
    padding: 0.5rem 0.8rem;
    font-size: 2.4rem;
  }
}